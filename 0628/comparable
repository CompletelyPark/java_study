/*
 *	Arraylist 사용법, hashmap, hashset 사용법, comparable, comparator 3개는 알기
 *
 * 	객체 비교시 작동하는 메소드
 * 	1. 동등 비교(==, !=) - 참조 값 비교
 * 	equals() - 객체가 가진 내용 값이 같으면 같다
 * 
 * 	2. 대소 비교(>, >=, <, <=) - 참조 값 비교
 * 		객체가 가진 내용값 비교
 * 		비교method 직접 사용도 하지만, 탐색, 정렬에서도 많이 사용
 * 		obja.비교메소드( objb ) 
 * 		결과: 0 같다
 * 			양수 obja 가 크다
 * 			음수	objb 가 크다
 * 	
 * 		비교기능이 필요할 때 comparable interface 를 구현해서 적용한다
 * 
 * 		implements comparable 은 기본비교방식 지정 시 사용
 * 		
 * 		comparator 은 다른비교방식을 지정시 사용, 외부에서 comparator 인터페이스를 구현해서 적용
 * 
 * 		class 이름 implements Compartor<generic type>{
 * 		
 * 		@override
 * 		public 자료형 compare(x, y){
 * 			비교식
 * 			}
 * 		}
 * 
 * 		x.sort(items, new compare클래스 이름()); - 내가 정의한 비교 방식으로 정렬시켜준다
 */
